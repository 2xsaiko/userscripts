{
    "env": {
        "browser": true,
        "node": true,
        "es2021": true,
        "es2022": true,
        "webextensions": true
    },
    "extends": ["eslint:recommended", "airbnb-base"],
    "globals": {
        "_browser": "writable",
        "browser": "readonly"
    },
    "ignorePatterns": [
        "/etc",
        "build",
        "dist",
        "node_modules"
    ],
    "overrides": [
        {
            "files": ["*.svelte"],
            "processor": "svelte3/svelte3"
        }
    ],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": ["svelte3"],
    "rules": {
        "array-callback-return": "off",
        "arrow-body-style": "off",
        "arrow-parens": ["error", "as-needed"],
        "comma-dangle": ["error", "never"],
        "consistent-return": "off",
        "default-case": "off",
        "eqeqeq": ["error", "smart"],
        "global-require": "off",
        "guard-for-in": "warn",
        "import/extensions": "off",
        "import/first": "off",
        "import/no-mutable-exports": "off",
        "import/no-extraneous-dependencies": ["error", {
            "devDependencies": true
        }],
        "import/prefer-default-export": "off",
        "import/no-unresolved": "off",
        "indent": ["error", 4, {"SwitchCase": 1}],
        "max-len": "off",
        "no-alert":"off",
        "no-await-in-loop":"warn",
        "no-confusing-arrow": ["warn", {
            "allowParens": true,
            "onlyOneSimpleParam": true
        }],
        "no-console": ["warn", {"allow": ["warn", "error", "info"]}],
        "no-continue": "off",
        "no-else-return": ["error", {"allowElseIf": true}],
        "no-nested-ternary": "off",
        "no-param-reassign": "warn",
        "no-plusplus": "off",
        "no-restricted-syntax": [
            "warn",
            {
                "selector": "ForInStatement",
                "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
            },
            {
                "selector": "ForOfStatement",
                "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
            },
            {
                "selector": "LabeledStatement",
                "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
            },
            {
                "selector": "WithStatement",
                "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
            }
        ],
        "no-return-assign": "off",
        "no-sequences": "error",
        "no-underscore-dangle":"off",
        "no-unused-expressions": "off",
        "no-use-before-define": ["error", {
            "functions": false,
            "classes": true,
            "variables": true,
            "allowNamedExports": false
        }],
        "object-curly-newline": ["error", {"consistent": true}],
        "object-curly-spacing": ["error", "never"],
        "one-var": "off",
        "one-var-declaration-per-line": "off",
        "prefer-destructuring": "off",
        "prefer-object-spread": "warn",
        "quotes": ["error", "double"],
        "import/no-namespace": "warn"
    }
}
